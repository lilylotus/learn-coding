server:
  port: 41103
  tag: cloud-ribbon-tag

spring:
  application:
    name: cloud-ribbon
  # Spring Cloud Ribbon 处于维护阶段，可以配置为 false
  cloud:
    loadbalancer:
      ribbon:
        enabled: true
  zipkin:
    base-url: http://127.0.0.1:9411/
    sleuth:
      sampler:
        probability: 1

eureka:
  instance:
    hostname: localhost
    prefer-ip-address: false
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
  client:
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
    service-url:
      # 多个注册中心用逗号分隔，server， 默认是 http://localhost:8761/eureka/
      defaultZone: http://localhost:8761/eureka/

# ribbon %u5168%u5C40%u901A%u7528%u914D%u7F6E
ribbon:
  ReadTimeout: 3000
  ConnectTimeout: 3000
  # 配置 ribbon 使用的请求工具，apache httpclient, okhttpclient
  http:
    client:
      enabled: true

# 针对要访问的 eureka 注册服务名称的 ribbon 配置
cloud-service-provider:
  ribbon:
    # 重试机制
    # Ribbon 连接超时时间
    ConnectTimeout: 3000
    # Ribbon 数据读取超时时间
    ReadTimeout: 3000
    # 是否对所有操作进行重试
    OkToRetryOnAllOperations: true
    # 切换实例的重试次数
    MaxAutoRetriesNextServer: 1
    # 对当前实例的重试次数
    MaxAutoRetries: 1
#    # Implement ILoadBalancer default: com.netflix.loadbalancer.ZoneAwareLoadBalancer
#    NFLoadBalancerClassName: com.netflix.loadbalancer.RoundRobinRule
#    # IRule
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule
#    # IPing
#    NFLoadBalancerPingClassName: com.netflix.loadbalancer.DummyPing
#    # ServerList
#    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
#    # ServerListFilter
#    NIWSServerListFilterClassName: org.springframework.cloud.netflix.ribbon.ZonePreferenceServerListFilter

management:
  endpoints:
    web:
      exposure:
        # "*" 表示包含所有 ["health","info","metrics","prometheus"]
        include: "*"
  endpoint:
    info:
      enabled: true
    health:
      show-details: ALWAYS

logging:
  level:
    root: info
    com.netflix.discovery: debug