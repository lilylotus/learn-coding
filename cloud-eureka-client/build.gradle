buildscript {
    ext {
        set('springCloudVersion', "Hoxton.SR8")
        set("springBootDocsVersion", "2.3.3.RELEASE")
    }
    repositories {
        maven { url = 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootDocsVersion}")
    }
}

plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
}

group = 'cn.nihility.cloud.eureka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/central' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://maven.aliyun.com/repository/spring' }
    maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR8")
    set("springBootDocsVersion", "2.3.3.RELEASE")
    set("springBootVersion", "2.3.3.RELEASE")
}

configurations {
    all*.exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-netflix-ribbon'
    /*all*.exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-loadbalancer'*/
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    /* Spring Cloud Netflix 客户端负载均衡器，在 Eureka Client 中自带了 Ribbon 和 loadbalancer */
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'
    /* ribbon 负载均衡重试机制 */
    implementation 'org.springframework.retry:spring-retry'
    
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
